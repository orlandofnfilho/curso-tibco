<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://www.tibco.com/schemas/2.1UsersApi/SharedResources/Schemas/Schema.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx2="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:pfx3="http://www.tibco.com/schemas/2.1UsersApi/SharedResources/Schemas/StandardError.xsd2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.tibco.com/schemas/2.1UsersApi/SharedResources/Schemas/Schema.xsd" schemaLocation="/SharedResources/Schemas/UserSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/2.1UsersApi/SharedResources/Schemas/StandardError.xsd2" schemaLocation="/SharedResources/Schemas/StandardError.xsd"/>
    <pd:name>Processes/AddUserImpl.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="PostData" type="xsd:string"/>
    </pd:startType>
    <pd:startX>45</pd:startX>
    <pd:startY>106</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="string-length($RenderError/ns:ActivityOutputClass/jsonString) > 0">
                <Response>
                    <status>
                        <xsl:value-of select="400"/>
                    </status>
                    <message>
                        <xsl:value-of select="$RenderError/ns:ActivityOutputClass/jsonString"/>
                    </message>
                </Response>
            </xsl:when>
            <xsl:otherwise>
                <Response>
                    <status>
                        <xsl:value-of select="200"/>
                    </status>
                    <message>
                        <xsl:value-of select="$Render-JSON/ns:ActivityOutputClass/jsonString"/>
                    </message>
                </Response>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="Response">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="status" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="message" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>624</pd:endX>
    <pd:endY>108</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1687245710155</pd:targetNamespace>
    <pd:activity name="Parse JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>164</pd:x>
        <pd:y>105</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ValidateOutputEnable>true</ValidateOutputEnable>
            <ActivityOutputEditor ref="pfx:User"/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$Start/PostData"/>
                </jsonString>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SaveUserData">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>390</pd:x>
        <pd:y>110</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/SharedResources/Connections/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>INSERT INTO users (name, status, data) VALUES (?,?,?) </statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>name</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>status</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>data</parameterName>
                    <dataType>TIMESTAMP</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcUpdateActivityInput>
                <name>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/pfx:User/pfx:name"/>
                </name>
                <status>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/pfx:User/pfx:status"/>
                </status>
                <data>
                    <xsl:choose>
                        <xsl:when test="exists($Java-Code/javaCodeActivityOutput/dateTime)">
                            <xsl:value-of select="$Java-Code/javaCodeActivityOutput/dateTime"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </data>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>533</pd:x>
        <pd:y>107</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <NullforEmptyvalues>true</NullforEmptyvalues>
            <ValidateIntputEnable>true</ValidateIntputEnable>
            <ActivityInputEditor>
                <xsd:element name="Response">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="statusCode" type="xsd:int"/>
                            <xsd:element name="message" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <Response>
                    <statusCode>
                        <xsl:value-of select="200"/>
                    </statusCode>
                    <message>
                        <xsl:value-of select="&quot;Data saved sucessfully&quot;"/>
                    </message>
                </Response>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Java Code">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>268</pd:x>
        <pd:y>108</pd:y>
        <config>
            <fileName>AddUserImplJavaCode</fileName>
            <packageName>Processes.AddUserImpl</packageName>
            <fullsource>package Processes.AddUserImpl;
import java.util.*;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
public class AddUserImplJavaCode{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String dataString = "";
	protected Date dateTime = null;
	public String getdataString() {
		return dataString;
	}
	public void setdataString(String val) {
		dataString = val;
	}
	public Date getdateTime() {
		return dateTime;
	}
	public void setdateTime(Date val) {
		dateTime = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public AddUserImplJavaCode() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : String dataString
	Out : Date dateTime
* Available Variables: DO NOT MODIFY *****/
SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
Date dataParse = sdf.parse(dataString);
SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
Date novaData = sdf2.parse(sdf2.format(dataParse));
setdateTime(novaData);
	}
}
</fullsource>
            <inputData>
                <row>
                    <fieldName>dataString</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </inputData>
            <outputData>
                <row>
                    <fieldName>dateTime</fieldName>
                    <fieldType>dateTime</fieldType>
                    <fieldRequired>optional</fieldRequired>
                </row>
            </outputData>
            <byteCode>
                <class>
                    <name>AddUserImplJavaCode</name>
                    <byteCode>yv66vgAAADQANQkADAAjCQAMACQKAA0AJQgAJgcAJwgAKAoABQApCgAFACoIACsKAAUALAoADAAtBwAuBwAvAQAKZGF0YVN0cmluZwEAEkxqYXZhL2xhbmcvU3RyaW5nOwEACGRhdGVUaW1lAQAQTGphdmEvdXRpbC9EYXRlOwEADWdldGRhdGFTdHJpbmcBABQoKUxqYXZhL2xhbmcvU3RyaW5nOwEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBAA1zZXRkYXRhU3RyaW5nAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQALZ2V0ZGF0ZVRpbWUBABIoKUxqYXZhL3V0aWwvRGF0ZTsBAAtzZXRkYXRlVGltZQEAEyhMamF2YS91dGlsL0RhdGU7KVYBAAY8aW5pdD4BAAMoKVYBAAZpbnZva2UBAApFeGNlcHRpb25zBwAwAQAKU291cmNlRmlsZQEAGEFkZFVzZXJJbXBsSmF2YUNvZGUuamF2YQwADgAPDAAQABEMABwAHQEAAAEAGmphdmEvdGV4dC9TaW1wbGVEYXRlRm9ybWF0AQATZGQvTU0veXl5eSBISDptbTpzcwwAHAAXDAAxADIBABN5eXl5LU1NLWRkIEhIOm1tOnNzDAAzADQMABoAGwEAKVByb2Nlc3Nlcy9BZGRVc2VySW1wbC9BZGRVc2VySW1wbEphdmFDb2RlAQAQamF2YS9sYW5nL09iamVjdAEAE2phdmEvbGFuZy9FeGNlcHRpb24BAAVwYXJzZQEAJChMamF2YS9sYW5nL1N0cmluZzspTGphdmEvdXRpbC9EYXRlOwEABmZvcm1hdAEAJChMamF2YS91dGlsL0RhdGU7KUxqYXZhL2xhbmcvU3RyaW5nOwAhAAwADQAAAAIABAAOAA8AAAAEABAAEQAAAAYAAQASABMAAQAUAAAAHQABAAEAAAAFKrQAAbAAAAABABUAAAAGAAEAAAALAAEAFgAXAAEAFAAAACIAAgACAAAABiortQABsQAAAAEAFQAAAAoAAgAAAA4ABQAPAAEAGAAZAAEAFAAAAB0AAQABAAAABSq0AAKwAAAAAQAVAAAABgABAAAAEQABABoAGwABABQAAAAiAAIAAgAAAAYqK7UAArEAAAABABUAAAAKAAIAAAAUAAUAFQABABwAHQABABQAAAA0AAIAAQAAABAqtwADKhIEtQABKgG1AAKxAAAAAQAVAAAAEgAEAAAAFwAEAAgACgAJAA8AGAABAB4AHQACABQAAABbAAMABQAAAC+7AAVZEga3AAdMKyq0AAG2AAhNuwAFWRIJtwAHTi0tLLYACrYACDoEKhkEtgALsQAAAAEAFQAAABoABgAAAB4ACgAfABMAIAAdACEAKAAiAC4AIwAfAAAABAABACAAAQAhAAAAAgAi</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <dataString>
                    <xsl:value-of select="$Parse-JSON/ns:ActivityOutputClass/pfx:User/pfx:data"/>
                </dataString>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log">
        <pd:type>com.tibco.pe.core.WriteToLogActivity</pd:type>
        <pd:resourceType>ae.activities.log</pd:resourceType>
        <pd:x>872</pd:x>
        <pd:y>113</pd:y>
        <config>
            <role>Error</role>
        </config>
        <pd:inputBindings>
            <pfx2:ActivityInput>
                <message>
                    <xsl:value-of select="$Catch/exceptiondata/*"/>
                </message>
                <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                    <msgCode>
                        <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                    </msgCode>
                </xsl:if>
            </pfx2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>881</pd:x>
        <pd:y>228</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="RenderError">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>725</pd:x>
        <pd:y>107</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <NullforEmptyvalues>true</NullforEmptyvalues>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor ref="pfx3:StandardError"/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <pfx3:StandardError>
                    <pfx3:timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </pfx3:timestamp>
                    <pfx3:status>
                        <xsl:value-of select="400"/>
                    </pfx3:status>
                    <pfx3:error>
                        <xsl:value-of select="'Bad Request'"/>
                    </pfx3:error>
                    <xsl:if test="$_error/ns1:ErrorReport/Msg">
                        <pfx3:message>
                            <xsl:value-of select="$_error/ns1:ErrorReport/Msg"/>
                        </pfx3:message>
                    </xsl:if>
                    <pfx3:path>
                        <xsl:value-of select="'/users'"/>
                    </pfx3:path>
                </pfx3:StandardError>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse JSON</pd:from>
        <pd:to>Java Code</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SaveUserData</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Java Code</pd:from>
        <pd:to>SaveUserData</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log</pd:from>
        <pd:to>RenderError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>Log</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>RenderError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>